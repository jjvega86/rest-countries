import Head from "next/head";
import CountryCard from "@/components/CountryCard";
import { getUniqueRegions } from "@/util/helpers";
import { useEffect, useState } from "react";
import { Country } from "@/util/types";
import Link from "next/link";

export default function Home({ data }: any) {
  const [countries, setCountries] = useState(data);
  const [search, setSearch] = useState("");
  const [currentRegion, setCurrentRegion] = useState("All Regions");
  const regions = getUniqueRegions(data);

  const filterByRegion = () => {
    let filteredData;
    if (currentRegion === "All Regions") {
      filteredData = data;
    } else {
      filteredData = data.filter(
        (country: Country) => country.region === currentRegion
      );
    }
    return filteredData;
  };

  useEffect(() => {
    let currentData = filterByRegion();
    setCountries(currentData);
  }, [currentRegion]);

  useEffect(() => {
    let currentData = filterByRegion();

    const searchedCountries = currentData.filter((country: Country) =>
      country.name.common.toLocaleLowerCase().includes(search)
    );

    setCountries(searchedCountries);
  }, [search]);

  return (
    <>
      <Head>
        <title>✈️ Traveler&apos;s Hub</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <section className="mx-10">
        {/* // TODO: Refactor search + select into components */}
        <div className="flex justify-between my-6">
          <input
            className="mt-5 border-solid border-2"
            type="text"
            value={search}
            onChange={(e) => setSearch(e.target.value)}
          />
          <select onChange={(e) => setCurrentRegion(e.target.value)}>
            {regions.map((region) => (
              <option key={region} value={region}>
                {region}
              </option>
            ))}
          </select>
        </div>
        <div className="grid place-content-center sm:grid-cols-4 gap-12">
          {countries.map((country: Country) => (
            <Link key={country.name.common} href={`/${country.name.common}`}>
              <CountryCard
                name={country.name.common}
                capital={country.capital}
                region={country.region}
                population={country.population}
                image={country.flags.png}
              />
            </Link>
          ))}
        </div>
      </section>
    </>
  );
}

export async function getServerSideProps() {
  const res = await fetch("https://restcountries.com/v3.1/all");
  const data = await res.json();

  return { props: { data } };
}
